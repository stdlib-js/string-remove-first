{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar nextGraphemeClusterBreak = require( '@stdlib/string-next-grapheme-cluster-break' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Removes the first character(s) of a string.\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} [n=1] - number of characters to remove\n* @throws {TypeError} must provide a string primitive\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {string} updated string\n*\n* @example\n* var out = removeFirst( 'last man standing' );\n* // returns 'ast man standing'\n*\n* @example\n* var out = removeFirst( 'presidential election' );\n* // returns 'residential election'\n*\n* @example\n* var out = removeFirst( 'javaScript' );\n* // returns 'avaScript'\n*\n* @example\n* var out = removeFirst( 'Hidden Treasures' );\n* // returns 'idden Treasures'\n*\n* @example\n* var out = removeFirst( 'üê∂üêÆüê∑üê∞üê∏', 2 );\n* // returns 'üê∑üê∞üê∏'\n*\n* @example\n* var out = removeFirst( 'foo bar', 4 );\n* // returns 'bar'\n*/\nfunction removeFirst( str, n ) {\n\tvar nextBreak;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tnextBreak = 0;\n\t\twhile ( n > 0 ) {\n\t\t\tnextBreak = nextGraphemeClusterBreak( str, nextBreak );\n\t\t\tn -= 1;\n\t\t}\n\t}\n\telse {\n\t\tnextBreak = nextGraphemeClusterBreak( str );\n\t}\n\t// Value of `nextBreak` will be -1 if and only if `str` is an empty string or `str` has only 1 extended grapheme cluster...\n\tif ( str === '' || nextBreak === -1 ) {\n\t\treturn '';\n\t}\n\treturn str.substring( nextBreak );\n}\n\n\n// EXPORTS //\n\nmodule.exports = removeFirst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove the first character(s) of a string.\n*\n* @module @stdlib/string-remove-first\n*\n* @example\n* var removeFirst = require( '@stdlib/string-remove-first' );\n*\n* var out = removeFirst( 'last man standing' );\n* // returns 'ast man standing'\n*\n* out = removeFirst( 'Hidden Treasures' );\n* // returns 'idden Treasures';\n*\n* out = removeFirst( 'üêÆüê∑üê∏üêµ', 2 );\n* // returns 'üê∏üêµ\n*/\n\n// MODULES //\n\nvar removeFirst = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = removeFirst;\n"],"names":["isString","require$$0","isPrimitive","isNonNegativeInteger","require$$1","nextGraphemeClusterBreak","require$$2","format","require$$3","lib","str","n","nextBreak","TypeError","arguments","length","substring"],"mappings":";;4WAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAAuBC,EAAmDF,YAC1EG,EAA2BC,EAC3BC,EAASC,EAkEb,IC9CAC,EDkBA,SAAsBC,EAAKC,GAC1B,IAAIC,EACJ,IAAMZ,EAAUU,GACf,MAAM,IAAIG,UAAWN,EAAQ,kEAAmEG,IAEjG,GAAKI,UAAUC,OAAS,EAAI,CAC3B,IAAMZ,EAAsBQ,GAC3B,MAAM,IAAIE,UAAWN,EAAQ,gFAAiFI,IAG/G,IADAC,EAAY,EACJD,EAAI,GACXC,EAAYP,EAA0BK,EAAKE,GAC3CD,GAAK,OAINC,EAAYP,EAA0BK,GAGvC,MAAa,KAARA,IAA6B,IAAfE,EACX,GAEDF,EAAIM,UAAWJ"}